{"version":3,"sources":["components/card/Card.js","components/KanbanBoard/KanbanBoard.js","components/Grouping/GroupingSortingOptions.js","App.js","reportWebVitals.js","index.js"],"names":["randomBackground","concat","Math","floor","random","Card","_ref","ticket","user","head","userInitials","name","slice","toUpperCase","React","createElement","className","id","style","background","borderRadius","title","display","priority","tag","groupByStatus","tickets","grouped","forEach","status","push","Object","keys","map","groupKey","groupTitle","groupByUser","users","find","u","userId","userName","groupByPriority","sortAlphabetically","groups","_toConsumableArray","sort","a","b","localeCompare","sortByPriority","KanbanBoard","groupBy","sortOption","groupedData","sortedData","ticketGroup","key","GroupingSortingOptions","setGroupBy","setSortOption","_useState","useState","_useState2","_slicedToArray","displayOptions","setDisplayOptions","onClick","onChange","e","target","value","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","App","setTickets","_useState3","_useState4","setUsers","_useState5","_useState6","_useState7","_useState8","useEffect","_asyncToGenerator","_callee","response","data","_context","fetch","json","console","log","t0","error","apply","arguments","fetchData","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.08a10cbc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './card.css';\r\nfunction getRandomBackgroundColor() {\r\n  const randomColor = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\r\n  return randomColor;\r\n}\r\nconst randomBackground = getRandomBackgroundColor();\r\nconst Card = ({ ticket, user, head }) => {\r\n  const userInitials = user ? user.name.slice(0, 2).toUpperCase() : 'UU';\r\n \r\n  if (head == 'status') {\r\n    \r\n    return (\r\n      <div className=\"card\">\r\n        <div id=\"card_id_user\">\r\n          <div className=\"card-id\">{ticket.id}</div>\r\n          <div className=\"user-initials-circle\" id=\"user_circle\" style={{ background: randomBackground, borderRadius: 50 }}>{userInitials}</div>\r\n        </div>\r\n        <div className=\"card-title\">{ticket.title}</div>\r\n        <div style={{display:\"flex\"}}>\r\n        <div id=\"card_tag\">\r\n          <div className=\"card-tag\">\r\n            <div className=\"card-tag-box\">\r\n            {ticket.priority}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"card_tag\">\r\n          <div className=\"card-tag\">\r\n            <div className=\"card-tag-box\">\r\n              <span className=\"card-dot\"></span>\r\n              {ticket.tag}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n  else if (head == 'user') {\r\n    return (\r\n      <div className=\"card\">\r\n        <div id=\"card_id_user\">\r\n          <div className=\"card-id\">{ticket.id}</div>\r\n        </div>\r\n        <div className=\"card-title\">{ticket.title}</div>\r\n        <div style={{display:\"flex\"}}>\r\n        <div id=\"card_tag\">\r\n          <div className=\"card-tag\">\r\n            <div className=\"card-tag-box\">\r\n            {ticket.priority}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"card_tag\">\r\n          <div className=\"card-tag\">\r\n            <div className=\"card-tag-box\">\r\n              <span className=\"card-dot\"></span>\r\n              {ticket.tag}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"card\">\r\n        <div id=\"card_id_user\">\r\n          <div className=\"card-id\">{ticket.id}</div>\r\n          <div className=\"user-initials-circle\" id=\"user_circle\" style={{ background: randomBackground, borderRadius: 50 }}>{userInitials}</div>\r\n        </div>\r\n        <div className=\"card-title\">{ticket.title}</div>\r\n        <div id=\"card_tag\">\r\n          <div className=\"card-tag\">\r\n            <div className=\"card-tag-box\">\r\n              <span className=\"card-dot\"></span>\r\n              {ticket.tag}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/Card';\r\nimport { useState,useEffect } from 'react';\r\nimport './KanbanBoard.css'; \r\n\r\nconst KanbanBoard = ({ tickets, users, groupBy, sortOption }) => {\r\n  \r\n  const groupedData = groupBy === 'status'\r\n    ? groupByStatus(tickets)\r\n    : groupBy === 'user'\r\n    ? groupByUser(tickets, users)\r\n    : groupByPriority(tickets);\r\n\r\n  const sortedData = sortOption === 'title'\r\n    ? sortAlphabetically(groupedData)\r\n    : sortOption === 'priority'\r\n    ? sortByPriority(groupedData)\r\n    : groupedData;\r\n    const getGroupTitleContent = (groupKey) => {\r\n      if (groupBy === 'status') {\r\n        return `${groupKey}`;\r\n      } else if (groupBy === 'user') {\r\n        return `${groupKey}`;\r\n      } else if (groupBy === 'priority') {\r\n        if(groupKey==0){\r\n          return 'No Priority';\r\n        }\r\n        else if(groupKey==1){\r\n          return 'Low';\r\n        }\r\n        else if(groupKey==2){\r\n          return 'Medium';\r\n        }\r\n        else if(groupKey==3){\r\n          return 'High';\r\n        }\r\n        else{\r\n          return 'Urgent';\r\n        }\r\n      }\r\n      return groupKey; \r\n    };\r\n  \r\n  return (\r\n    <div className=\"kanban-board\">\r\n\r\n      {sortedData.map((ticketGroup) => (\r\n        <div key={ticketGroup.groupKey} className=\"kanban-group-container\">\r\n            \r\n        <h2>{getGroupTitleContent(ticketGroup.groupKey)}</h2>\r\n          <div className=\"kanban-cards\">\r\n            {ticketGroup.tickets.map((ticket) => (\r\n              <Card key={ticket.id} ticket={ticket} head = {groupBy} user={users.find((user) => user.id === ticket.userId)} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst groupByStatus = (tickets) => {\r\n  const grouped = {};\r\n  tickets.forEach((ticket) => {\r\n    if (!grouped[ticket.status]) {\r\n      grouped[ticket.status] = [];\r\n    }\r\n    grouped[ticket.status].push(ticket);\r\n  });\r\n  return Object.keys(grouped).map((status) => ({\r\n    groupKey: status,\r\n    groupTitle: status,\r\n    tickets: grouped[status],\r\n  }));\r\n};\r\n\r\nconst groupByUser = (tickets, users) => {\r\n  const grouped = {};\r\n  tickets.forEach((ticket) => {\r\n    const user = users.find((u) => u.id === ticket.userId);\r\n    if (!user) return; \r\n    if (!grouped[user.name]) {\r\n      grouped[user.name] = [];\r\n    }\r\n    grouped[user.name].push(ticket);\r\n  });\r\n  return Object.keys(grouped).map((userName) => ({\r\n    groupKey: userName,\r\n    groupTitle: userName,\r\n    tickets: grouped[userName],\r\n  }));\r\n};\r\n\r\nconst groupByPriority = (tickets) => {\r\n  const grouped = {};\r\n  tickets.forEach((ticket) => {\r\n    if (!grouped[ticket.priority]) {\r\n      grouped[ticket.priority] = [];\r\n    }\r\n    grouped[ticket.priority].push(ticket);\r\n  });\r\n  return Object.keys(grouped).map((priority) => ({\r\n    groupKey: priority,\r\n    groupTitle: `Priority ${priority}`,\r\n    tickets: grouped[priority],\r\n  }));\r\n};\r\n\r\nconst sortAlphabetically = (groups) => {\r\n  return [...groups].sort((a, b) => a.groupTitle.localeCompare(b.groupTitle));\r\n};\r\n\r\nconst sortByPriority = (groups) => {\r\n  return [...groups].sort((a, b) => b.groupKey - a.groupKey);\r\n};\r\n\r\nexport default KanbanBoard;\r\n","import React, { useState } from 'react';\r\nimport './GroupingSortingOptions.css'; \r\n\r\nconst GroupingSortingOptions = ({ groupBy, setGroupBy, sortOption, setSortOption }) => {\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n \r\n  const toggleDisplayOptions = () => {\r\n    setDisplayOptions(!displayOptions);\r\n  };\r\n\r\n  return (\r\n    <div className=\"group-sort-options\">\r\n      <button onClick={toggleDisplayOptions} id=\"display_button\">Display</button>\r\n      <div className={`options-card ${displayOptions ? 'show' : ''}`}>\r\n        <form>\r\n          <div>\r\n            <label>\r\n              Grouping:\r\n              <span></span>\r\n              <select onChange={(e) => setGroupBy(e.target.value)}>\r\n                <option value=\"status\">Status</option>\r\n                <option value=\"user\">User</option>\r\n                <option value=\"priority\">Priority</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Ordering:\r\n              <select onChange={(e) => setSortOption(e.target.value)}>\r\n                <option value=\"title\">Title</option>\r\n                <option value=\"priority\">Priority</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupingSortingOptions;\r\n","import React, { useEffect, useState } from 'react';\nimport KanbanBoard from './components/KanbanBoard/KanbanBoard';\nimport GroupingSortingOptions from './components/Grouping/GroupingSortingOptions';\nimport './App.css'\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortOption, setSortOption] = useState('title');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const data = await response.json();\n        setTickets(data.tickets);\n        setUsers(data.users);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"HeaderOptions\">\n      <div id=\"upper\"><GroupingSortingOptions\n        groupBy={groupBy}\n        setGroupBy={setGroupBy}\n        sortOption={sortOption}\n        setSortOption={setSortOption}\n      /></div>\n      <div id=\"lower\">\n        <KanbanBoard tickets={tickets} users={users} groupBy={groupBy} sortOption={sortOption} />\n\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}